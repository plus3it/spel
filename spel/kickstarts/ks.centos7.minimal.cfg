# Kickstart file for a minimal linux install

install
text
cdrom
lang en_US.UTF-8
keyboard us
network --onboot yes --device eth0 --bootproto dhcp --ipv6 auto
rootpw  --iscrypted $6$F9bQlyf3Aj1Y3mfr$RAOMlD2CZYPaN65oVmbFbITcuT8FAONiHz4QMWHUJp6.MCxQQKXaa4VZLijbNdVYRhYFrqS3Ug3TOERKZUeDU/
firewall --service=ssh
reboot --eject
authconfig --enableshadow --passalgo=sha512
selinux --enforcing
timezone --utc Etc/UTC
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto"
# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work
clearpart --drives sda --all
zerombr

part /boot --fstype=ext4 --asprimary --size=512 --ondrive=sda
part pv.008002 --grow --size=200 --ondrive=sda

volgroup VolGroup00 --pesize=4096 pv.008002
logvol /              --name=rootVol  --vgname=VolGroup00 --size=4096 --fstype=ext4
logvol swap           --name=swapVol  --vgname=VolGroup00 --size=2048
logvol /home          --name=homeVol  --vgname=VolGroup00 --size=1024 --fstype=ext4
logvol /var           --name=varVol   --vgname=VolGroup00 --size=2048 --fstype=ext4
logvol /var/log       --name=logVol   --vgname=VolGroup00 --size=2048 --fstype=ext4
logvol /var/log/audit --name=auditVol --vgname=VolGroup00 --size=8192 --fstype=ext4 --grow

%include /tmp/repo-include

%packages --nobase --nocore
@core
authconfig
chrony
dracut-config-generic
dracut-fips
dracut-norescue
gdisk
grub2
grub2-tools
iptables-services
iptables-utils
kernel
kexec-tools
lvm2
ntp
ntpdate
openssh-clients
openssh-server
rootfiles
rsync
selinux-policy-targeted
sudo
tar
vim-common
wget
yum-utils
-abrt
-abrt-addon-ccpp
-abrt-addon-kerneloops
-abrt-addon-python
-abrt-cli
-abrt-libs
-aic94xx-firmware
-alsa-firmware
-alsa-lib
-alsa-tools-firmware
-biosdevname
-gcc-gfortran
-iprutils
-ivtv-firmware
-iwl1000-firmware
-iwl100-firmware
-iwl105-firmware
-iwl135-firmware
-iwl2000-firmware
-iwl2030-firmware
-iwl3160-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6000g2b-firmware
-iwl6050-firmware
-iwl7260-firmware
-libertas-sd8686-firmware
-libertas-sd8787-firmware
-libertas-usb8388-firmware
-libvirt-client
-libvirt-devel
-libvirt-java
-libvirt-java-devel
-nc
-NetworkManager
-plymouth
-sendmail
%end

%pre
URL_BASE=http://mirror.centos.org/centos/7

BASEARCH=$(uname -m)
CENTOS_REPOS="os updates extras"
REPO_INCLUDE='/tmp/repo-include'

(
    for repo in ${CENTOS_REPOS}
    do
        printf 'repo --name="%s" --baseurl=%s/%s/%s --cost=100\n' \
            "${repo}" "${URL_BASE}" "${repo}" "${BASEARCH}"
    done
) > "${REPO_INCLUDE}"
%end

%post
# Credit idea for vagrant setup:
# - https://www.scriptscribe.org/infrastructure/repeatable-vagrant-builds-with-packer/
if grep VAGRANT /proc/cmdline
then
  # Create the vagrant user and give sudo access
  id vagrant || useradd -m -r vagrant
  echo "vagrant:vagrant" | chpasswd
  (
    printf 'Defaults:vagrant env_keep += "SSH_AUTH_SOCK"\n'
    printf 'Defaults:vagrant !requiretty\n'
    printf 'vagrant ALL=(ALL) NOPASSWD: ALL\n\n'
  ) > /etc/sudoers.d/vagrant
  chmod 0440 /etc/sudoers.d/vagrant
fi
%end
